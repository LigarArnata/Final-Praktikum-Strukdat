#include <stdio.h>
#include <stdlib.h>

typedef struct Node {
    int value;
    struct Node* next;
} Node;

Node* newNode(int value){
    Node* new_node = (Node *)malloc(sizeof(Node));
    new_node->value = value;
    new_node->next = NULL;
    return new_node;
}

void push(Node** head_ref, int new_value){
    Node* new_node = newNode(new_value);
    new_node->next = (*head_ref);
    (*head_ref) = new_node;
}

Node* addthem(Node* x, Node* y){
    Node* addition = NULL;
    Node *temp, *prev = NULL;
    int carry = 0, sum;

    while (x != NULL || y != NULL) {
        sum = carry + (x ? x->value : 0) + (y ? y->value : 0);
        carry = (sum >= 10) ? 1 : -0;
        sum = sum % 10;
        temp = newNode(sum);
        if (addition == NULL)
            addition = temp;
        else
            prev->next = temp;
            prev = temp;
        if (x)
            x = x->next;
        if (y)
            y = y->next;
    }
    if (carry > 0)
        temp->next = newNode(carry);
    return addition;
}

Node* reverse(Node* head)
{
    if (head == NULL || head->next == NULL)
        return head;
    Node* rest = reverse(head->next);
    head->next->next = head;
    head->next = NULL;
    return rest;
}

void print(Node* node)
{
    printf("[");
    while (node != NULL) {
        printf("%d",node->value);
        node = node->next;
    }
    printf("]");
    printf("\n");
}


int main(){
    int m,n,x,y;

    Node* MyList = 0;
    Node* ListSaya = 0;
    Node* ListAddition = 0;

    scanf("%d %d", &m, &n);

    for (int i = 0; i < m; i++)
    {
        scanf("%d", &x);
        push(&MyList, x);
    }
    for (int i = 0; i < n; i++)
    {
        scanf("%d", &y);
        push(&ListSaya, y);
    }
    ListAddition = addthem (MyList, ListSaya);
    ListAddition = reverse(ListAddition);
    print(ListAddition);
    return 0;
}
